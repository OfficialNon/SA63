// Code generated by entc, DO NOT EDIT.

package diagnose

const (
	// Label holds the string label denoting the diagnose type in the database.
	Label = "diagnose"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"

	// EdgeSymptoms holds the string denoting the symptoms edge name in mutations.
	EdgeSymptoms = "symptoms"
	// EdgeIllness holds the string denoting the illness edge name in mutations.
	EdgeIllness = "illness"
	// EdgePatient holds the string denoting the patient edge name in mutations.
	EdgePatient = "patient"
	// EdgeDoctor holds the string denoting the doctor edge name in mutations.
	EdgeDoctor = "doctor"

	// Table holds the table name of the diagnose in the database.
	Table = "diagnoses"
	// SymptomsTable is the table the holds the symptoms relation/edge.
	SymptomsTable = "diagnoses"
	// SymptomsInverseTable is the table name for the Symptoms entity.
	// It exists in this package in order to avoid circular dependency with the "symptoms" package.
	SymptomsInverseTable = "symptoms"
	// SymptomsColumn is the table column denoting the symptoms relation/edge.
	SymptomsColumn = "symptoms_symptoms_diagnose"
	// IllnessTable is the table the holds the illness relation/edge.
	IllnessTable = "diagnoses"
	// IllnessInverseTable is the table name for the Illness entity.
	// It exists in this package in order to avoid circular dependency with the "illness" package.
	IllnessInverseTable = "illnesses"
	// IllnessColumn is the table column denoting the illness relation/edge.
	IllnessColumn = "illness_illness_diagnose"
	// PatientTable is the table the holds the patient relation/edge.
	PatientTable = "diagnoses"
	// PatientInverseTable is the table name for the Patient entity.
	// It exists in this package in order to avoid circular dependency with the "patient" package.
	PatientInverseTable = "patients"
	// PatientColumn is the table column denoting the patient relation/edge.
	PatientColumn = "patient_patient_diagnose"
	// DoctorTable is the table the holds the doctor relation/edge.
	DoctorTable = "diagnoses"
	// DoctorInverseTable is the table name for the Doctor entity.
	// It exists in this package in order to avoid circular dependency with the "doctor" package.
	DoctorInverseTable = "doctors"
	// DoctorColumn is the table column denoting the doctor relation/edge.
	DoctorColumn = "doctor_doctor_diagnose"
)

// Columns holds all SQL columns for diagnose fields.
var Columns = []string{
	FieldID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Diagnose type.
var ForeignKeys = []string{
	"doctor_doctor_diagnose",
	"illness_illness_diagnose",
	"patient_patient_diagnose",
	"symptoms_symptoms_diagnose",
}
